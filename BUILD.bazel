load("@bazel_gazelle//:def.bzl", "gazelle")
load("@io_bazel_rules_go//go:def.bzl", "go_binary", "go_library", "go_test", "nogo")

################################################################################
# WARNING: TOOLS_NOGO was temporarily overwritten while we wait for the `shadow`
#          static check to improve.
################################################################################

TOOLS_NOGO = [
    "@org_golang_x_tools//go/analysis/passes/asmdecl:go_default_library",
    "@org_golang_x_tools//go/analysis/passes/assign:go_default_library",
    "@org_golang_x_tools//go/analysis/passes/atomic:go_default_library",
    "@org_golang_x_tools//go/analysis/passes/atomicalign:go_default_library",
    "@org_golang_x_tools//go/analysis/passes/bools:go_default_library",
    "@org_golang_x_tools//go/analysis/passes/buildssa:go_default_library",
    "@org_golang_x_tools//go/analysis/passes/buildtag:go_default_library",
    # TODO(#2396): pass raw cgo sources to cgocall and re-enable.
    # "@org_golang_x_tools//go/analysis/passes/cgocall:go_default_library",
    "@org_golang_x_tools//go/analysis/passes/composite:go_default_library",
    "@org_golang_x_tools//go/analysis/passes/copylock:go_default_library",
    "@org_golang_x_tools//go/analysis/passes/ctrlflow:go_default_library",
    "@org_golang_x_tools//go/analysis/passes/deepequalerrors:go_default_library",
    "@org_golang_x_tools//go/analysis/passes/errorsas:go_default_library",
    "@org_golang_x_tools//go/analysis/passes/findcall:go_default_library",
    "@org_golang_x_tools//go/analysis/passes/httpresponse:go_default_library",
    "@org_golang_x_tools//go/analysis/passes/ifaceassert:go_default_library",
    "@org_golang_x_tools//go/analysis/passes/inspect:go_default_library",
    "@org_golang_x_tools//go/analysis/passes/loopclosure:go_default_library",
    "@org_golang_x_tools//go/analysis/passes/lostcancel:go_default_library",
    "@org_golang_x_tools//go/analysis/passes/nilfunc:go_default_library",
    "@org_golang_x_tools//go/analysis/passes/nilness:go_default_library",
    "@org_golang_x_tools//go/analysis/passes/pkgfact:go_default_library",
    "@org_golang_x_tools//go/analysis/passes/printf:go_default_library",
    # "@org_golang_x_tools//go/analysis/passes/shadow:go_default_library",
    "@org_golang_x_tools//go/analysis/passes/shift:go_default_library",
    "@org_golang_x_tools//go/analysis/passes/sortslice:go_default_library",
    "@org_golang_x_tools//go/analysis/passes/stdmethods:go_default_library",
    "@org_golang_x_tools//go/analysis/passes/stringintconv:go_default_library",
    "@org_golang_x_tools//go/analysis/passes/structtag:go_default_library",
    "@org_golang_x_tools//go/analysis/passes/testinggoroutine:go_default_library",
    "@org_golang_x_tools//go/analysis/passes/tests:go_default_library",
    "@org_golang_x_tools//go/analysis/passes/unmarshal:go_default_library",
    "@org_golang_x_tools//go/analysis/passes/unreachable:go_default_library",
    "@org_golang_x_tools//go/analysis/passes/unsafeptr:go_default_library",
    "@org_golang_x_tools//go/analysis/passes/unusedresult:go_default_library",
]

nogo(
    name = "nogo",
    config = ":nogo_config.json",
    visibility = ["//visibility:public"],
    deps = TOOLS_NOGO,
)

# gazelle:exclude vendor

gazelle(
    name = "gazelle.go.update",
    command = "fix",
    prefix = "github.com/blacksmith-community/blacksmith",
)

gazelle(
    name = "gazelle.go.deps.update",
    command = "update-repos",
    extra_args = [
        "-from_file=go.mod",
        "-to_macro=go_deps.bzl%go_repositories",
    ],
)

go_library(
    name = "blacksmith_lib",
    srcs = [
        "api.go",
        "broker.go",
        "config.go",
        "internal_api.go",
        "logging.go",
        "main.go",
        "manifest.go",
        "services.go",
        "utils.go",
        "vault.go",
        "vault_index.go",
    ],
    importpath = "github.com/blacksmith-community/blacksmith",
    visibility = ["//visibility:private"],
    deps = [
        "//shield",
        "@com_github_cloudfoundry_community_gogobosh//:gogobosh",
        "@com_github_geofffranks_spruce//:spruce",
        "@com_github_pivotal_cf_brokerapi//:brokerapi",
        "@com_github_pivotal_golang_lager//:lager",
        "@com_github_smallfish_simpleyaml//:simpleyaml",
        "@in_gopkg_yaml_v2//:yaml_v2",
    ],
)

go_binary(
    name = "blacksmith",
    embed = [":blacksmith_lib"],
    visibility = ["//visibility:public"],
)

go_test(
    name = "blacksmith_test",
    srcs = [
        "manifest_test.go",
        "services_test.go",
        "suite_test.go",
    ],
    deps = [
        ":blacksmith_lib",
        "@com_github_onsi_ginkgo//:ginkgo",
        "@com_github_onsi_gomega//:gomega",
        "@in_gopkg_yaml_v2//:yaml_v2",
    ],
    data = glob(["test/**"])
)
